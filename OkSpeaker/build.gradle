if (IS_APPLICATION.toBoolean().booleanValue()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
android {

    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion "29.0.3"


    defaultConfig {
//        if (IS_APPLICATION.toBoolean()) {
//            applicationId "cn.rubintry.speak"
//        }
        minSdkVersion MIN_SDK_VERSION.toInteger()
        targetSdkVersion TARGET_SDK_VERSION.toInteger()
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
            if (IS_APPLICATION.toBoolean().booleanValue()) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
            if (IS_APPLICATION.toBoolean().booleanValue()) {
                signingConfig signingConfigs.release
            }
        }
    }


    sourceSets {
        main {
            //指定要加载哪个AndroidManifest.xml文件
            if (IS_APPLICATION.toBoolean().booleanValue()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.github.promeg:tinypinyin:2.0.3'
}

def siteUrl = 'https://github.com/RubinTry/OkSpeaker.git'                        // #CONFIG# // project homepage
def gitUrl = 'https://github.com/RubinTry/OkSpeaker.git'                     // #CONFIG# // project git
group = "cn.rubintry.speak"
version = "1.0.6"//定义版本标识
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                description 'description'
                name 'OkSpeaker'  // 可默认，项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer { //  可默认，开发者信息
                        id 'Rubintry'
                        name 'Rubintry NAME'
                        email '13857769302@163.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}


artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar

}
Properties properties = new Properties()
// 加载本地配置
properties.load(project.rootProject.file('local.properties').newDataInputStream())
//这个是和你bintray上面创建的package(项目)是对应的
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"  //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库
        name = "OkSpeaker"  //需更改，这个名字就是你在Bintray上创建Package的名字，这里会查询，如果此包不存在就会创建一个。
        userOrg = 'logcat305'    //组织名称 organization
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
